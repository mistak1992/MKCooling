//
//  PrefixHeader.pch
//  pchDemo
//
//  Created by mist on 2020/2/19.
//  Copyright © 2020 mist. All rights reserved.
//

#ifndef PrefixHeader_pch
#define PrefixHeader_pch

// Include any system framework and library headers here that should be included in all compilation units.
// You will also need to set the Prefix Header build setting of one or more of your targets to reference this file.

#define kDEFAULT_MAX_FETCHINFO_DELAY 5

#import <CocoaLumberjack/CocoaLumberjack.h>
#import "MKBLEDataPresistModel+CoreDataClass.h"
#import "MKBLEDataModel.h"
#import "MKDataController.h"
#import "MKPopoverVC.h"
#import "MKDialogueVC.h"
#import "MKDialogueC.h"
#import "MKCpuTool.h"
#import "MKDate.h"

static const DDLogLevel ddLogLevel = DDLogLevelAll;

#define kNotificationNAME_RPM @"kNotificationNAME_RPM"
#define kNotificationNAME_DIALOGUECLOSE @"kNotificationNAME_DIALOGUECLOSE"
#define kNotificationNAME_RESETCONNECTION @"kNotificationNAME_RESETCONNECTION"
#define kNotificationNAME_KILLLAUNCHER @"kNotificationNAME_KILLLAUNCHER"
#define kNotificationNAME_RESIGNACTIVE @"kNotificationNAME_RESIGNACTIVE"
#define kNotificationNAME_MODECHANGED @"kNotificationNAME_MODECHANGED"
#define kNotificationNAME_STATECHANGED @"kNotificationNAME_STATECHANGED"
#define kNotificationNAME_BLESTATECHANGED @"kNotificationNAME_BLESTATECHANGED"
// 设备MAC地址
static NSString *deviceMAC = @"50029187962a";


typedef NS_ENUM(NSUInteger, MKCoolerMode) {
    MKCoolerModeOff,
    MKCoolerModeSystem,
    MKCoolerModeCPULoad,
    MKCoolerModeAI,
};

typedef NS_ENUM(NSUInteger, MKCoolerState) {
    MKCoolerStateOff,
    MKCoolerStateIdle,
    MKCoolerStateSleep,
    MKCoolerStateRunning,
};

typedef NS_ENUM(NSUInteger, MKBLEProtocolHdr) {
    MKBLEProtocolHdrTypeSend = 0x01,
    MKBLEProtocolHdrTypeRecived = 0x10,
};

typedef NS_ENUM(NSUInteger, MKBLEProtocolType) {
    MKBLEProtocolTypeGetToken = 1,
    MKBLEProtocolTypeFetchInfo,
    MKBLEProtocolTypeSetFanDuty,
    MKBLEProtocolTypeSetDelay,
    MKBLEProtocolTypeSetSwitch,
    MKBLEProtocolTypeInfoResponse = 0xfe,
    MKBLEProtocolTypeResponse = 0xff,
};

typedef NS_ENUM(NSUInteger, MKPopoverUIState) {
    MKPopoverUIStateDefault,
    MKPopoverUIStateOnline,
    MKPopoverUIStateOffline,
};

typedef NS_ENUM(NSUInteger, MKBLEProtocolRet) {
    MKBLEProtocolRetSuccess,
    MKBLEProtocolRetFail = 0xef,
    MKBLEProtocolRetOther,
};

typedef NS_ENUM(NSUInteger, MKBLEAction) {
    MKBLEActionNone,
    MKBLEActionGetToken,
    MKBLEActionFetchInfo = 2,
    MKBLEActionSetFanDuty,
    MKBLEActionSetDelay,
};

typedef NS_ENUM(NSUInteger, MKBLEResult) {
    MKBLEResultSuccess,
    MKBLEResultFail,
    MKBLEResultBusy,
    MKBLEResultSending,
    MKBLEResultUnknown,
};

typedef NS_ENUM(NSUInteger, MKBLEFunction) {
    MKBLEFunctionUnset = 0,
    MKBLEFunctionFetchInfo = 2,
    MKBLEFunctionSetFanDuty,
    MKBLEFunctionSetDelay,
};

#endif /* PrefixHeader_pch */
